version: '2'
services:

  db:
    restart: always
    image: postgres:alpine
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:alpine
    volumes:
      - ./redis:/data

  app:
    build: .
    image: gargron/mastodon

  web:
    extends:
      service: app
    restart: always
    env_file: with_nginx/.env.production
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    depends_on:
      - db
      - redis
    volumes:
      - ./public/assets:/mastodon/public/assets
      - ./public/packs:/mastodon/public/packs
      - ./public/system:/mastodon/public/system

  streaming:
    extends:
      service: app
    restart: always
    env_file: with_nginx/.env.production
    command: npm run start
    depends_on:
      - db
      - redis

  sidekiq:
    extends:
      service: app
    restart: always
    env_file: with_nginx/.env.production
    command: bundle exec sidekiq -q default -q mailers -q pull -q push
    depends_on:
      - db
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  nginx:
    restart: always
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    env_file: with_nginx/.env.production
    command: /bin/sh -c "envsubst '$$LOCAL_DOMAIN' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - web
      - streaming
    volumes:
     - ./with_nginx/nginx.template:/etc/nginx/conf.d/mysite.template
     - /etc/letsencrypt:/etc/letsencrypt
     - /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem

